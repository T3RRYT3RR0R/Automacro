@formatDate { dependencies: @argCount

  // this macro is a demonstration of argument validation and error handling
  @formatDate usage: %@formatDate% <returnvar> <"delimChar"> [MM] [dd] [yyyy]
  @formatDate usage: format style may use one or more of the above optional arguments in any order.
  @formatDate usage: eaxmple:    %@formatDate% $myVar - yyyy MM dd
  @formatDate usage: 
  @formatDate usage: Unsupported delimiters: 
  @formatDate usage:  ' : becomes `
  @formatDate usage:  \ : becomes /
  @formatDate usage:  " : becomes whitespace

  // arg processing
  For /f "tokens=1,* delims= " %%1 in ("^!@.args^!")Do (
    // remove return variable from args
    Set "@.args=^!@.args:*%%1 =^!"

    // strip doublequotes
    Set ^"@.args=^!@.args:"=^!"

    // enforce case sensitive prerequisites
    Set "@.args=^!@.args:mm=MM^!"
    Set "@.args=^!@.args:DD=dd^!"
    Set "@.args=^!@.args:YY=yy^!"

    // seperate delim character from args
    Set "@.delim=^!@.args:~0,1^!"
    Set "@.args=^!@.args:* =^!"

    // error handling. ensures args do not exceed maximum count or contain invalid characters
    Set "@.error="
    Set "@.test=^!@.args^!"
    Set "@.test=^!@.test: =^!"
    Set "@.test=^!@.test:d=^!"
    if defined @.test Set "@.test=^!@.test:m=^!"
    if defined @.test Set "@.test=^!@.test:y=^!"
    if defined @.test Set "@.error=2"
    If not defined @.error (
      !@argCount! ^!@.args^!
      If ^!$argcount^! GTR 3 Set "@.error=1"
      If ^!$argcountError^! NEQ 0 Set "@.error=2"
    )
    If not defined @.error (

      // case: args conform -perform delim tests and run powershell command
      Set "@.delim=^!@.delim:\=/^!"
      //                                  - \ character replaced with /
      //       enforce delim restrictions - ' character replaced with `
      For /f "tokens=1 eol=\" %%_ in ("^!@.delim:'=`^!")Do Set "@.args=^!@.args: =%%_^!"
      for /f "usebackq delims=" %%G in (`PowerShell -Command "& {Get-Date -format '^!@.args^!'}"`) do set "%%1=%%G"

      // if defined intial macro arg; flag success by setting errorlevel 0
      if defined @.init (Call )
    )Else (

      // case: args invalid - notify error type
      1>&2 Echo( Error:
      If "^!@.error^!"=="1" 1>&2 Echo( - Maximum args for date format is 3 tokens. Invalid args: "^!@.args^!"
      If "^!@.error^!"=="2" (
        1>&2 Echo( - Invalid character/s in argument "^!@.args^!" : "^!@.test^!"
        1>&2 Echo( Supported characters: D M Y
      )
      // if defined intial macro arg; flag failure by setting errorlevel 1
      if defined @.init (Call)
    )
  )
} @formatDate /args /help
