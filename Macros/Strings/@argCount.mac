@ArgCount {
  @ArgCount usage: %@argCount% <list>
  @ArgCount usage:  Only supports args containing alphanumerical characters
  @ArgCount usage:  with the following exceptions: -\@$.[]{}:;_
  // returns: $argCount
  //                  n - where n is the number of args provided
  //                  0 - no args / args invalid
  //          $argCountError
  //                  1 - if incompatable characters in args
  //                  0 - no error

  // strip leading whitespace from @.Args; Remove all '-' chartacters.
  For /f "tokens=1,* Delims= " %%? in ("@^!@.Args:-=^!")Do Set "@.args=%%@"

  // default returns
  Set /a "$argCount=0","$argCountError=0"
  // reject incompatable arg strings; return $argCountError
  For /f "delims=-\@$.[]{}:;_0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ " %%G in ("^!@.args^!")Do Set "$argCountError=1"

  If ^!$argCountError^! EQU 0  (
    // strip single trailing whitespace if present
    If "^!@.args:~-1^!"==" " Set "@.args=^!@.args:~0,-1^!"

    // use bit shifting to convert all args to 1 and sum.
    // method requires rejection / removal of all mathematical operators from the string
    Set /A "$argCount=(((^!@.args: =>>31)+3>>1)+((^!>>31)+3>>1))"
  )
} @ArgCount /args /selfRef

<; Notes:
  Intended for use with args containing AlphaNumerical characters only.
  
  Macro Version: 1.0 02/08/2024
  Author: T3RY
  Contributor: Grub4K
;>