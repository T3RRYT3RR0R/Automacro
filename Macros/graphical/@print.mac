@print { Dependencies: @strLen
  @print usage: /y int /x int /f int /b int /s "string to print"

  Set "$print.mathArgs= $y $x "
  Set "@.Args=^!@.Args: /x = --$x:^!"
  Set "@.Args=^!@.Args: /y = --$y:^!"
  Set "@.Args=^!@.Args: /f = --$f:^!"
  Set "@.Args=^!@.Args: /b = --$b:^!"
  Set "@.Args=^!@.Args: /s = --$s:^!"
  Set "@.Args=^!@.Args:"--=" --^!"
  Set "@.Args=^!@.Args:: "=:"^!"
  Set "@.Args=^!@.Args: --=`--^!"
  Set "@.Args=^!@.Args: .--= .`--^!"
  Set "@.Args=^!@.Args: .`=:.`^!"
  Set ^"@.Args=^!@.Args:"=^!"
  Set "$print="

  !@StrLen! @.Args @.ArgCount
  Set "@.t=^!@.Args:--=^!"
  !@StrLen! @.t @.i
  Set /A "@.ArgCount=(@.ArgCount-@.i)/2"
  For /l %%i in (1 1 ^!@.ArgCount^!)do For /f "tokens=1,2 Delims=:`" %%1 in ("^!@.Args:*--=^!")Do (
    If not "^!$print.MathArgs: %%1 =^!" == "^!$print.MathArgs^!" (
      Set /a "%%1=%%2"
      If %%1==$y Set "$print=^!$print^![^!%%1^!f"
      If %%1==$x Set "$print=^!$print^![^!%%1^!G"
    )
    If %%1==$f Set "$print=^!$print^![38;5;%%2m"
    If %%1==$b Set "$print=^!$print^![48;5;%%2m" 
    If %%1==$s (
      set /a $y+=1
      Set "$print=^!$print^!%%2[^!$y^!f[^!$x^!G"
    )
    Set "@.args=^!@.args:*--%%1:%%2=^!"
  )
  Set "$print=^!$print^![0m
  Echo(^!$print^![0m
} @print /args /selfRef
