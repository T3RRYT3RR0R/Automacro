@randomizeArray { Dependencies: @ArgCount
  @randomizeArray usage: %@randomizeArray% <returnVar> <list of values>

  For /f "tokens=1,* Delims= " %%1 in ("^!@.args^!")Do (

    // count elements in list
    !@argCount! %%2
     Set "%%1[i]=^!$argcount^!"

    // split arg retrrn var from array list
    Set "@.args= %%2"
    // for each value in list
    For /l %%i in (^!$argCount^! -1 1)Do (

      // select  a random value within the current size of the list; reset step count
      Set /A "@.i=^!Random^! %% %%i + 1" , "@.c=1"

      // clear temp variables
      Set "@.lead="
      Set "@.end="
      // for each element in list
      For %%G in (^!@.args^!)Do If not defined @.end (
        // build temp list of elements until the random index value of @.i is reached
        If ^!@.c^! LSS ^!@.i^! Set "@.Lead=^!@.lead^! %%G"

        // when step count equ random @.i
        If ^!@.c^! EQU ^!@.i^! (

          // set flag to end proccessing of list until next index
          Set "@.end=1"

          // assign element to array index
          Set "%%1[%%i]=%%~G"

          If not "^!@.lead^!"=="" (
            // reconstruct the list, removing the current element

            For /f "delims=" %%S in ("^!@.lead:~1^!")do Set "@.args=^!@.args:%%S %%G=%%S^!"
                // trim the list

          )Else Set "@.args=^!@.args:* %%G=^!"
        )

        // increment step count
        Set /a "@.c+=1"
      )
    )
  )
} @randomizeArray /Args
