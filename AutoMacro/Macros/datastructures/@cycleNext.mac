@cycleNext { dependencies: @pushUnique @push
  @cycleNext usage: %@cycleNext% <sourceVar> <returnVar> [/A] [/D] [/O]
  @cycleNext usage: sourceVar : the variable containing the ` delimited values to be cycled.
  @cycleNext usage: returnVar : your custom return variable
  @cycleNext usage: /A : Append the value to the return variable. Default behaviour overwrites the variable.
  @cycleNext usage: /D : Echo the returned value/s without the ` delimiter
  @cycleNext usage: /O : Echo the returned value/s
  For %%L in ( O A D )do (
    If not "^!@.args:/%%L=^!" == "^!@.args^!" (
      Set "@.args=^!@.args: /%%L=^!"
      Set "@.switch[%%L]=1"
    )else Set "@.switch[%%L]="
  )
  For /f "tokens=1,2" %%? in ("^!@.args^!")Do (
    For /f "tokens=1 delims=`" %%1 in ("^!%%?^!")Do (
      Set "%%?=^!%%?:*%%1`=^!`%%1"
      If defined @.Switch[A] (
        Set "%%@=^!%%@^!"%%~1"`"
        Set "%%@=^!%%@:``=`^!"
      )Else Set "%%@=%%~1"
      If defined @.Switch[O] Echo(%%~1
      If defined @.Switch[D] Echo(^!%%@:`= ^!
    )
  )
} @cycleNext /args
